<?xml version = "1.0"?>
<!--details.xml-->
<students>
<student>
<name>
<firstname> Sana </firstname>
<lastname> earnest </lastname>
</name>
<address>
<street> 101 South Street</street>
<city> kollam </city>
<email>sana@gmail.com </email>
<phone> 4940001 </phone>
</address>
</student>

<student>
<name>
<firstname> dayal </firstname>
<lastname> dev </lastname>
</name>
<address>
<street> 202 Victoria Road </street>
<city> tvpm </city>
<email> dayaldev@gmail.com</email>
<phone> 4940002 </phone>
</address>
</student>

<student>
<name>
<firstname> Rahul </firstname>
<lastname> ramakrishnan </lastname>
</name>
<address>
<street> jane villa  </street>
<city> ekm </city>
<email> rahulram@gmail.com</email>
<phone> 4940003 </phone>
</address>
</student>

<student>
<name>
<firstname> Aswathy </firstname>
<lastname> L </lastname>
</name>
<address>
<street> Dileep bhavan  </street>
<city>kollam  </city>
<email> aswathy@gmail.com</email>
<phone> 4940003 </phone>
</address>
</student>
XDocument doc = XDocument.Load(@"c:/xmlconfig/miss.xml");
foreach (var client in doc.Descendants("students"))
{
   
    students.Add(new XElement("testing", "none"));
}

</students>












{"students":[
   {"name":"sana", "age":"23", "city":"Agra"},
   {"name":"Steve", "age":"28", "city":"Delhi"},
   {"name":"Peter", "age":"32", "city":"Chennai"},
   {"name":"Chaitanya", "age":"28", "city":"Bangalore"}
]}







from flask import Flask, request
from flask_restful import Resource, Api
from sqlalchemy import create_engine
from json import dumps
from flask.ext.jsonpify import jsonify

db_connect = create_engine('sqlite:///chinook.db')
app = Flask(__name__)
api = Api(app)

class Employees(Resource):
    def get(self):
        conn = db_connect.connect() # connect to database
        query = conn.execute("select * from employees") # This line performs query and returns json result
        return {'employees': [i[0] for i in query.cursor.fetchall()]} # Fetches first column that is Employee ID

class Tracks(Resource):
    def get(self):
        conn = db_connect.connect()
        query = conn.execute("select trackid, name, composer, unitprice from tracks;")
        result = {'data': [dict(zip(tuple (query.keys()) ,i)) for i in query.cursor]}
        return jsonify(result)

class Employees_Name(Resource):
    def get(self, employee_id):
        conn = db_connect.connect()
        query = conn.execute("select * from employees where EmployeeId =%d "  %int(employee_id))
        result = {'data': [dict(zip(tuple (query.keys()) ,i)) for i in query.cursor]}
        return jsonify(result)
        

api.add_resource(Employees, '/employees') # Route_1
api.add_resource(Tracks, '/tracks') # Route_2
api.add_resource(Employees_Name, '/employees/<employee_id>') # Route_3


if __name__ == '__main__':
     app.run(port='5002')